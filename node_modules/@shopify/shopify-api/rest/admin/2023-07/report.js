"use strict";
/***********************************************************************************************************************
* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *
***********************************************************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.Report = void 0;
const base_1 = require("../../base");
const types_1 = require("../../../lib/types");
class Report extends base_1.Base {
    static async find({ session, id, fields = null }) {
        const result = await this.baseFind({
            session: session,
            urlIds: { "id": id },
            params: { "fields": fields },
        });
        return result.data ? result.data[0] : null;
    }
    static async delete({ session, id }) {
        const response = await this.request({
            http_method: "delete",
            operation: "delete",
            session: session,
            urlIds: { "id": id },
            params: {},
        });
        return response ? response.body : null;
    }
    static async all({ session, ids = null, limit = null, since_id = null, updated_at_min = null, updated_at_max = null, fields = null, ...otherArgs }) {
        const response = await this.baseFind({
            session: session,
            urlIds: {},
            params: { "ids": ids, "limit": limit, "since_id": since_id, "updated_at_min": updated_at_min, "updated_at_max": updated_at_max, "fields": fields, ...otherArgs },
        });
        return response;
    }
}
exports.Report = Report;
Report.apiVersion = types_1.ApiVersion.July23;
Report.hasOne = {};
Report.hasMany = {};
Report.paths = [
    { "http_method": "delete", "operation": "delete", "ids": ["id"], "path": "reports/<id>.json" },
    { "http_method": "get", "operation": "get", "ids": [], "path": "reports.json" },
    { "http_method": "get", "operation": "get", "ids": ["id"], "path": "reports/<id>.json" },
    { "http_method": "post", "operation": "post", "ids": [], "path": "reports.json" },
    { "http_method": "put", "operation": "put", "ids": ["id"], "path": "reports/<id>.json" }
];
Report.resourceNames = [
    {
        "singular": "report",
        "plural": "reports"
    }
];
//# sourceMappingURL=report.js.map